version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cie_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cie_db}
      POSTGRES_USER: ${POSTGRES_USER:-cie_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cie_password}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cie_user} -d ${POSTGRES_DB:-cie_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Next.js Application with Auto-Seeding (Production)
  app:
    build: .
    container_name: cie_app
    ports:
      - "${APP_PORT:-3005}:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-cie_user}:${POSTGRES_PASSWORD:-cie_password}@postgres:5432/${POSTGRES_DB:-cie_db}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NODE_ENV=${NODE_ENV:-production}
    volumes:
      - ./public/lab-images:/app/public/lab-images
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Development Service (for live editing)
  app-dev:
    build: .
    container_name: cie_app_dev
    ports:
      - "3006:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-cie_user}:${POSTGRES_PASSWORD:-cie_password}@postgres:5432/${POSTGRES_DB:-cie_db}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3006
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "echo 'Waiting for database to be ready...' && while ! nc -z postgres 5432; do sleep 1; done && echo 'Database is ready!' && echo 'Running database migrations...' && pnpm prisma migrate deploy && echo 'Seeding database...' && node --loader ts-node/esm prisma/seed.ts && echo 'Starting development server...' && pnpm dev"
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local 